"use strict";(self.webpackChunkhx_loli_hub=self.webpackChunkhx_loli_hub||[]).push([[4931],{74931:(t,e,a)=>{a.d(e,{diagram:()=>w});var r=a(57354),n=a(55395),l=a(79008),o=a(42107),i=a(78731),s={packet:[]},c=structuredClone(s),d=o.UI.packet,k=(0,o.K2)((()=>{const t=(0,n.$t)({...d,...(0,o.zj)().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),b=(0,o.K2)((()=>c.packet),"getPacket"),p={pushWord:(0,o.K2)((t=>{t.length>0&&c.packet.push(t)}),"pushWord"),getPacket:b,getConfig:k,clear:(0,o.K2)((()=>{(0,o.IU)(),c=structuredClone(s)}),"clear"),setAccTitle:o.SV,getAccTitle:o.iN,setDiagramTitle:o.ke,getDiagramTitle:o.ab,getAccDescription:o.m7,setAccDescription:o.EI},h=(0,o.K2)((t=>{(0,r.S)(t,p);let e=-1,a=[],n=1;const{bitsPerRow:l}=p.getConfig();for(let{start:r,end:i,label:s}of t.blocks){if(i&&i<r)throw new Error(`Packet block ${r} - ${i} is invalid. End must be greater than start.`);if(r!==e+1)throw new Error(`Packet block ${r} - ${i??r} is not contiguous. It should start from ${e+1}.`);for(e=i??r,o.Rm.debug(`Packet block ${r} - ${e} with label ${s}`);a.length<=l+1&&p.getPacket().length<1e4;){const[t,e]=g({start:r,end:i,label:s},n,l);if(a.push(t),t.end+1===n*l&&(p.pushWord(a),a=[],n++),!e)break;({start:r,end:i,label:s}=e)}}p.pushWord(a)}),"populate"),g=(0,o.K2)(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),f={parse:(0,o.K2)((async t=>{const e=await(0,i.qg)("packet",t);o.Rm.debug(e),h(e)}),"parse")},u=(0,o.K2)(((t,e,a,r)=>{const n=r.db,i=n.getConfig(),{rowHeight:s,paddingY:c,bitWidth:d,bitsPerRow:k}=i,b=n.getPacket(),p=n.getDiagramTitle(),h=s+c,g=h*(b.length+1)-(p?0:s),f=d*k+2,u=(0,l.D)(e);u.attr("viewbox",`0 0 ${f} ${g}`),(0,o.a$)(u,g,f,i.useMaxWidth);for(const[l,o]of b.entries())x(u,o,l,i);u.append("text").text(p).attr("x",f/2).attr("y",g-h/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),x=(0,o.K2)(((t,e,a,{rowHeight:r,paddingX:n,paddingY:l,bitWidth:o,bitsPerRow:i,showBits:s})=>{const c=t.append("g"),d=a*(r+l)+l;for(const k of e){const t=k.start%i*o+1,e=(k.end-k.start+1)*o-n;if(c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(k.label),!s)continue;const a=k.end===k.start,l=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",l).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(k.start),a||c.append("text").attr("x",t+e).attr("y",l).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(k.end)}}),"drawWord"),$={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},w={parser:f,db:p,renderer:{draw:u},styles:(0,o.K2)((({packet:t}={})=>{const e=(0,n.$t)($,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles")}}}]);