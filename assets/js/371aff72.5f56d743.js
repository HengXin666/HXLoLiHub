"use strict";(self.webpackChunkhx_loli_hub=self.webpackChunkhx_loli_hub||[]).push([[6552],{85866:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/4/25/01-Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55","metadata":{"permalink":"/HXLoLiHub/blog/2025/4/25/01-Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55","editUrl":"https://github.com/HengXin666/HXLoLiHub/edit/main/blog/2025-4-25/01-Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55.md","source":"@site/blog/2025-4-25/01-Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55.md","title":"Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55","description":"\u672c\u6587\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e0b, \u6211\u4ece Blossom \u8fc1\u79fb\u767e\u4e07\u5b57\u7684\u7b14\u8bb0\u7684\u8fc7\u7a0b... \u4e3b\u8981\u4f7f\u7528\u4e86\u7c7b\u5b57\u5178\u6811\u7684\u601d\u60f3\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f, \u4ee5\u6784\u5efa\u8def\u5f84, \u4ee5\u53ca\u5904\u7406\u76f8\u5bf9\u8def\u3001\u672c\u5730\u56fe\u7247\u7684\u95ee\u9898...","date":"2025-04-25T20:04:36.000Z","tags":[{"inline":true,"label":"python","permalink":"/HXLoLiHub/blog/tags/python"},{"inline":true,"label":"\u5de5\u5177","permalink":"/HXLoLiHub/blog/tags/\u5de5\u5177"}],"readingTime":8.795,"hasTruncateMarker":true,"authors":[{"name":"Heng_Xin","title":"\u3053\u3053\u304b\u3089\u5148\u306f\u4e00\u65b9\u901a\u884c\u3060!","url":"https://github.com/HengXin666","email":"282000500@qq.com","socials":{"github":"https://github.com/HengXin666","bilibili":"https://space.bilibili.com/478917126"},"imageURL":"https://avatars.githubusercontent.com/u/103022267","key":"Heng_Xin","page":null}],"frontMatter":{"authors":"Heng_Xin","title":"Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55","date":"2025-04-25T20:04:36.000Z","tags":["python","\u5de5\u5177"]},"unlisted":false,"lastUpdatedAt":1745584412000,"lastUpdatedBy":"Heng_Xin_666","nextItem":{"title":"VsCode\u535a\u5ba2\u6a21\u7248","permalink":"/HXLoLiHub/blog/2025/4/22/02-vscode\u535a\u5ba2\u6a21\u7248"}},"content":"\u672c\u6587\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e0b, \u6211\u4ece Blossom \u8fc1\u79fb\u767e\u4e07\u5b57\u7684\u7b14\u8bb0\u7684\u8fc7\u7a0b... \u4e3b\u8981\u4f7f\u7528\u4e86\u7c7b`\u5b57\u5178\u6811`\u7684\u601d\u60f3\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f, \u4ee5\u6784\u5efa\u8def\u5f84, \u4ee5\u53ca\u5904\u7406\u76f8\u5bf9\u8def\u3001\u672c\u5730\u56fe\u7247\u7684\u95ee\u9898...\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u4e0e AI \u6597\u667a\u6597\u52c7\\n\\n\u6211\u76f4\u63a5\u628a\u9700\u6c42\u6254\u7ed9AI, \u6211\u53ef\u61d2\u5f97\u60f3...\\n\\n\u63d0\u793a\u8bcd:\\n\\n```text\\n\u5e2e\u6211\u7f16\u5199\u4e00\u4e2a\u672c\u5730md\u6574\u7406\u7a0b\u5e8f\\n\\n\u9996\u5148\uff0c\u539f\u672c\u7684md\u6587\u4ef6\u662f\u81ea\u5e26\u6587\u4ef6\u7ed3\u6784\u7684\\n\\n\u4f8b\u5982\\n\\nC++/STL/array.md\\n\\n\u4f60\u9700\u8981\u628a\u4ed6\u4eec\u91cd\u6784\u4e3a\\n\\n001-C++/001-STL/001-array/index.md\\n\u6bd4\u5982 \u6211\u63d0\u4f9b\u7684\u8def\u5f84\u662f /C++/STL/array.md\\n   \u4f60\u5e94\u8be5\u751f\u6210\u4e3a /001-C++/001-STL/001-array/index.md\\n\\n\u7279\u522b\u7684\\n1.\\n\u56fe\u7247\u5168\u90e8\u4ee5\u76f8\u5bf9\u8def\u5f84\u6216\u8005https\u7684\u65b9\u5f0f\u7ed9\u51fa\\n\\n\u5982\u679c\u5b83\u662f\u672c\u5730\u8def\u5f84\uff0c\u90a3\u4e48\u9700\u8981 \u628a\u5bf9\u5e94\u7684\u56fe\u7247 \u62f7\u8d1d\u5230 index.md \u540c\u7ea7\u76ee\u5f55\u4e0b\\n\u5e76\u4e14\u4fee\u6539 md\u7684\u56fe\u7247\u94fe\u63a5\\n\\n2. \u5173\u4e8e \u5e8f\u53f7 001\\n\\n\u6211\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u683c\u5f0f\u4e3a\\n\\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \u2193\u2193 \u6587\u7ae0\u5217\u8868 \u2193\u2193 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\\n\u2503 \u6392\u5e8f [ID] [\u7248\u672c] [\u65f6\u95f4] \u6587\u7ae0\u8def\u5f84\\n\u2520\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\n\u2503   1 [20157] [ 47] [2025-04-22 17:17:41] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[algorithm]\u76ee\u9332\\n\u2503   2 [20155] [  9] [2025-04-09 16:23:48] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[\u5bfc\u8bba]\u57fa\u7840/[\u5f00\u7aef]\u65f6\u7a7a\u590d\u6742\u5ea6\\n\u2503   3 [20156] [ 22] [2025-04-19 20:29:26] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[\u6570\u636e\u7ed3\u6784]\u7ebf\u6027\u8868/\u7ebf\u6027\u8868\\n\u2503   4 [20323] [  1] [2025-03-16 17:29:01] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[\u6570\u636e\u7ed3\u6784]\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u6570\u7ec4\\n\u2503   5 [20324] [  2] [2025-03-16 17:26:58] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[\u6570\u636e\u7ed3\u6784]\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u9759\u6001\u94fe\u8868\\n\u2503   6 [20325] [  1] [2025-03-26 16:48:40] /\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[\u6570\u636e\u7ed3\u6784]\u7ebf\u6027\u8868/\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784-\u5355\u5411\u94fe\u8868\\n\\n\u4f60\u9700\u8981\u4ee5\u8fd9\u4e2a \u6392\u5e8f\u4e3a \u6392\u5e8f\uff0c\\n\\n\u6ce8\u610f\uff0c\u5bf9\u4e8e\u5355\u4e2a\u6587\u4ef6\u5939\u5185\uff0c\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u5171\u7528\u8fd9\u4e2a\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u76ee\u5f55\u4e5f\u662f001-\u8fd9\u79cd\u5f62\u5f0f\\n\\n\u7136\u540e\u6570\u5b57\u4e0d\u662f\u7167\u6284 \u6211\u63d0\u4f9b\u7684\u6587\u4ef6\u7684\uff0c\u800c\u662f\u6bcf\u4e2a\u76ee\u5f55\u90fd\u662f\u4ece001\u5f00\u59cb\uff0c\u72ec\u7acb\u7684\uff0c\uff0c\u53ea\u662f\u6392\u5e8f\u7528\u5230\u4e86\u6211\u63d0\u4f9b\u7684\u6587\u4ef6\\n\\n3. .md\u7684\u6587\u5b57\u6709\u4e9b\u4ee5 https\u5f15\u7528\u6587\u7ae0\uff0c\u4ed6\u4eec\u7684\u683c\u5f0f\u7c7b\u4f3c\uff1a\\n[\u6587\u4ef6\u6d41](https://blog.hxloli.com/blog/#/articles?articleId=20180 \\"##20180##\\")\\n[\u5b57\u7b26\u4e32\u6d41](https://blog.hxloli.com/blog/#/articles?articleId=20183 \\"##20183##\\")\\n\u5176\u4e2d articleId \u5df2\u7ecf\u5728\u6211\u63d0\u4f9b\u6211\u6587\u4ef6\u4e2d\u7ed9\u51fa\u3002\\n\\n\u4f60\u9700\u8981\u66ff\u6362\u4e3a .md\u76f8\u5bf9\u8def\u5f84\uff0c\u800c\u4e0d\u662f https . (\u4ec5\u5bf9\u4e8ehttps://blog.hxloli.com/blog/\u800c\u8a00)\uff0c\u5176\u4ed6\u7684\u53ef\u80fd\u662f\u6b63\u5e38\u7684url\\n\\n\u6ce8\u610f\u8981\u8003\u8651\u65b0\u94fe\u63a5 \u5e94\u8be5\u662f\u5e26\u6709\u6392\u5e8f\u548cindex.md\u7684\uff0c\u5efa\u8bae\u6700\u540e\u518d\u7edf\u4e00\u5904\u7406\uff0c\u5148\u628a\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u751f\u6210\u597d\\n```\\n\\n\u7ed3\u679c\u5c31\u662f GPT-4o \u4e71\u56de\u7b54, \u8fde\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u5199\u4e0d\u5bf9...\\n\\nds\u4e5f\u5c31\u5199\u5bf9\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f...(\u8fd8\u662f\u6211\u8bf4\u4e86\u597d\u51e0\u6b21\u624d\u6539\u5bf9\u7684 =-=)\\n\\n> \u5b83\u4eec\u4e3b\u8981\u662f\u8fde\u5e8f\u53f7\u90fd\u641e\u5427\u660e\u767d, \u660e\u660e\u8981\u6c42\u662f `\u5355\u72ec`\u6587\u4ef6\u5939\u4e0b, \u5e8f\u53f7\u4ece `001` \u5f00\u59cb...\\n>\\n> \u6839\u672c\u59b9\u4eba\u542c\u61c2...\\n>\\n> \u800c\u4e14GPT\u53c8\u50bb\u53c8\u61d2, \u8bf4\u4e86\u90fd\u4e0d\u6539... \u5fc5\u9700\u4ee5\u5f3a\u786c\u7684\u6001\u5ea6\u9a82\u56fd\u7cb9\u4e86\u624d\u6539... \u4f46\u4f9d\u7136\u662f\u9519\u7684.\\n>\\n> ds \u601d\u8003\u4e86\u5f88\u591a, \u4f46\u662f\u4e0d\u884c...\\n\\n\u56e0\u6b64\u53ea\u597d\u6211\u81ea\u5df1\u6765\u4e86 (\u81f3\u5c11\u70e6\u4eba\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6211\u53ef\u4ee5\u76f4\u63a5\u7528...)\\n\\n## Py Md \u5c0f\u5de5\u5177\\n\\n\u56e0\u4e3a\u6211\u6ce8\u610f\u5230, \u5176\u5e8f\u53f7\u5728\u524d\u7684, \u5c31\u662f\u539f\u672c\u6211 Blossom \u4e2d\u6587\u4ef6\u7684\u6392\u5e8f, \u90a3\u95ee\u9898\u5c31\u7b80\u5355\u591a\u4e86\\n\\n\u5f88\u5bb9\u6613\u5c31\u60f3\u5230, \u628a\u4e00\u4e2a Path \u6309\u7167 `/` \u5207\u5206\\n\\n\u5982: `/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/[algorithm]\u76ee\u9332` -> `[\u8ba1\u4f6c\u5e38\u8b58, \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5, [algorithm]\u76ee\u9332]`\\n\\n\u6700\u540e \u8865\u4e0a\u4e00\u4e2a `index.md` \u7136\u540e\u628a\u5185\u5bb9\u590d\u5236\u8fc7\u6765\u5373\u53ef.\\n\\n\u7279\u522b\u7684, \u6211\u4eec\u9700\u8981\u5e8f\u53f7\u561b. \u7136\u540e\u6ce8\u610f\u5230, \u5148\u6765\u7684\u5e8f\u53f7\u80af\u5b9a\u662f\u5c0f\u7684, \u7136\u540e\u5c31\u8d2a\u5fc3\u5c31\u597d\u4e86...\\n\\n\u5199\u4e00\u4e2a`\u5b57\u5178\u6811`\u6a21\u62df\u5efa\u9020\u7684\u8fc7\u7a0b, \u540c\u65f6\u8bb0\u5f55\u8fd9\u4e2a\u76ee\u5f55\u662f\u5426\u5df2\u7ecf\u521b\u5efa, \u6709\u5c31\u4e0d`new`, \u65e0\u5c31\u53ef\u4ee5`mkdir`\u4e86\\n\\n> (\u611f\u89c9\u53ef\u4ee5\u4e0d\u7528\u90a3\u4e48\u9ebb\u70e6...)\\n\\n\u5177\u4f53\u4ee3\u7801:\\n\\n```python\\nimport os\\nimport re\\nimport shutil\\n\\ndef fxxkPath(path: str) -> str:\\n    # \u5b9a\u4e49\u975e\u6cd5\u5b57\u7b26\u7684\u6b63\u5219\u6a21\u5f0f (Windows\u4e0b\u7684\u7279\u6b8a\u5b57\u7b26)\\n    illegalChars = r\'[<>:\\"/\\\\\\\\|?*]\'\\n    \\n    # \u7528\u6b63\u5219\u66ff\u6362\u975e\u6cd5\u5b57\u7b26\u4e3a\u5408\u6cd5\u5b57\u7b26\\n    res = re.sub(illegalChars, \'_\', path)\\n    \\n    # \u8fd4\u56de\u5408\u6cd5\u7684\u8def\u5f84\\n    return res\\n\\n# \u7279\u6b8a\u8def\u5f84\u7f13\u5b58\\nmemoPathItem = {}\\n\\n# \u5b57\u5178\u6811, \u8fb9\u6784\u5efa, \u8fb9\u8f93\u51fa\\nclass Node:\\n    def __init__(self):\\n        self.next = {}  # \u5b58\u50a8\u4e0b\u4e00\u7ea7\u8282\u70b9\\n        self.idPath = {}  # \u5b58\u50a8\u8def\u5f84\u6807\u8bc6\\n\\n    def _add(self, s: str, maePath: str):\\n        \\"\\"\\"\u6a21\u62df\u6811\u7ed3\u6784\u7684\u6dfb\u52a0\\"\\"\\"\\n        fkStr = fxxkPath(s)\\n\\n        if (fkStr != s):\\n            memoPathItem[s] = fkStr\\n            s = fkStr\\n\\n        if s in self.next:\\n            return self.next[s], self.idPath[s]\\n        \\n        node = Node()\\n        self.next[s] = node\\n        idPath = f\\"{len(self.next):03d}-{s}\\"\\n        self.idPath[s] = idPath\\n        \\n        os.makedirs(os.path.dirname(f\\"{maePath}/{idPath}/\\"), exist_ok=True)\\n        \\n        return node, idPath\\n\\n\\ndef insert(root: Node, path: str, coutPath: str):\\n    \\"\\"\\"path insert to Tree\\"\\"\\"\\n    list = path.split(\'/\')\\n    node = root\\n\\n    for s in list:\\n        if (len(s) == 0):\\n            continue\\n        node, newPath = node._add(s, coutPath)\\n        coutPath = f\\"{coutPath}/{newPath}\\"\\n\\n    return coutPath\\n\\ndef parse_log(srcRoot, logPath, coutPath):\\n    \\"\\"\\"\u6539\u8fdb\u540e\u7684\u65e5\u5fd7\u89e3\u6790\u51fd\u6570\\"\\"\\"\\n    \\n    root = Node()\\n\\n    # id-mpa: id - (NewPath(\u65b0\u8def\u5f84), \u539f\u8def\u5f84)\\n    idMap = {}\\n    \\n    with open(logPath, \'r\', encoding=\'utf-8\') as f:\\n        for line in f:\\n            line = line.strip()\\n            # \u8df3\u8fc7\u975e\u6570\u636e\u884c\\n            if not line.startswith(\'\u2503\') or line.startswith(\'\u2520\') or \'\u6392\u5e8f [ID]\' in line:\\n                continue\\n            \\n            # \u4f7f\u7528\u66f4\u7cbe\u786e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\\n            match = re.match(\\n                r\'^\u2503\\\\s+(\\\\d+)\\\\s+\\\\[(\\\\d+)\\\\]\\\\s+\\\\[\\\\s*(\\\\d+)\\\\s*\\\\]\\\\s+\\\\[([^\\\\]]+)\\\\]\\\\s+(.+)$\',\\n                line\\n            )\\n            if not match:\\n                continue\\n            \\n            _, aid, _, _, path = match.groups()\\n\\n            # \u628a path \u7684\u7a7a\u683c\u548c. \u66ff\u6362\u4e3a \'\' (\u7a7a)\\n            path = path.replace(\' \', \'\').replace(\'.\', \'\').replace(\':\', \'\')\\n\\n            path = path.strip()\\n\\n            # \u6b64\u5904\u5fc5\u7136\u521b\u5efa index.md\\n            makeFile = f\\"{insert(root, path, coutPath)}/index.md\\"\\n            srcFile = f\\"{srcRoot}/{path}.md\\"\\n\\n            print(\\"build\\", makeFile)\\n            \\n            if os.path.exists(srcFile):\\n                shutil.copy2(srcFile, makeFile)\\n            else:\\n                print(f\\"Warning: Source file {srcFile} does not exist.\\")\\n            \\n            idMap[aid] = (makeFile, f\\"{srcRoot}/{os.path.dirname(path)}\\")\\n\\n    return idMap\\n\\n\\ndef syoriFile(idMap):\\n    \\"\\"\\"\u5904\u7406\u6587\u4ef6, \u628a\u56fe\u7247\u8fdb\u884c\u590d\u5236, \u628a\u94fe\u63a5\u66ff\u6362\u4e3a\u76f8\u5bf9\u8def\u5f84\\"\\"\\"\\n\\n    # \u5904\u7406\u56fe\u7247 (\u9700\u8981copy\u8fc7\u6765)\\n    def process_image(match, current_dir, oldPath):\\n        alt = match.group(1)\\n        img_path = match.group(2)\\n        \\n        # @todo \u7279\u522b\u7684, \u5982\u679c\u662f\u672c\u5730\u8def\u5f84, \u4f46\u6587\u4ef6\u4e0d\u5b58\u5728, \u5219\u4f1a\u62a5\u9519\u6216\u8005\u7ec8\u6b62!\\n        if not img_path.startswith(\'http\'):\\n            img_name = os.path.basename(img_path)\\n            dest = os.path.join(oldPath, img_path)\\n            if os.path.exists(dest):\\n                shutil.copy(dest, f\\"{current_dir}/{img_name}\\")\\n                print(\\"cp img:\\", img_name)\\n            else:\\n                print(\\"\u56fe\u7247\u4e0d\u5b58\u5728:\\", dest, \\"\u6765\u81ea\\", current_dir, \\"index.md\\")\\n                exit(-1)\\n            return f\'![{alt}](./{img_name})\'\\n        return match.group(0)\\n\\n    # \u5904\u7406\u56fe\u7247\u94fe\u63a5\\n    def replace_link(match, id_map, current_dir):\\n        text = match.group(1)\\n        aid = match.group(2)\\n        \\n        if aid in id_map:\\n            target = id_map[aid][0]\\n            rel_path = os.path.relpath(target, start=current_dir).replace(os.sep, \'/\')\\n            return f\'[{text}]({rel_path})\'\\n        return match.group(0)\\n\\n    for id, path in idMap.items():  # \u4f7f\u7528 .items() \u904d\u5386\u5b57\u5178\\n        print(id, path)\\n\\n        paPath = os.path.dirname(path[0])  # \u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u7236\u76ee\u5f55\\n\\n        with open(path[0], \'r+\', encoding=\'utf-8\') as f:\\n            content = f.read()\\n            \\n            # \u5904\u7406\u56fe\u7247\\n            content = re.sub(\\n                r\'!\\\\[(.*?)\\\\]\\\\(((?!http).*?)\\\\)\',\\n                lambda m: process_image(m, paPath, path[1]), \\n                content\\n            )\\n            \\n            # \u5904\u7406\u6587\u7ae0\u94fe\u63a5\\n            content = re.sub(\\n                r\'\\\\[(.*?)\\\\]\\\\(https://blog\\\\.hxloli\\\\.com/blog/.*?articleId=(\\\\d+).*?\\\\)\',\\n                lambda m: replace_link(m, idMap, paPath),\\n                content\\n            )\\n            \\n            f.seek(0)\\n            f.write(content)\\n            f.truncate()\\n\\n                \\ndef main(logPath, srcRoot, outputDir):\\n    # \u6807\u51c6\u5316\u8def\u5f84\\n    srcRoot = os.path.normpath(srcRoot)\\n    outputDir = os.path.normpath(outputDir)\\n    \\n    # \u89e3\u6790\u65e5\u5fd7, \u5e76\u4e14\u590d\u5236\u5230\u65b0\u8def\u5f84, \u5e76\u4e14 \u8bb0\u5f55 id - (\u65b0\u8def\u5f84, \u539f\u8def\u5f84), \u7136\u540e\u8fd4\u56de idMap\\n    idMap = parse_log(srcRoot, logPath, outputDir)\\n    \\n    # \u521b\u5efa\u8f93\u51fa\u76ee\u5f55\u7ed3\u6784\u5e76\u590d\u5236\u6587\u4ef6\\n    syoriFile(idMap)\\n\\nif __name__ == \'__main__\':\\n    main(\\n        logPath=\'./cin/BML_1_20250425_143534_243/log.txt\',\\n        srcRoot=\'./cin/BML_1_20250425_143534_243\',\\n        outputDir=\'./cout\'\\n    )\\n```\\n\\n\u8fd8\u662f\u5f88\u7b80\u5355\u7684, \u4f46\u662f\u5728\u8fd9\u533a\u95f4\u8fd8\u662f\u9047\u5230\u5f88\u591a\u95ee\u9898, \u6bd4\u5982 Blossom \u7684\u6587\u4ef6\u662f\u53ef\u4ee5\u547d\u540d `\u7a7a\u683c.:/` \u8fd9\u79cd\u4e1c\u897f\u7684.\\n\\n\u56e0\u4e3a\u7a0b\u5e8f\u5185\u90e8\u4f3c\u4e4e\u6ca1\u6709\u9650\u5236... \u5f53\u521d\u4e5f\u6ca1\u6709\u60f3\u90a3\u4e48\u591a,\\n\\n\u8c01\u77e5\u9053, \u4e00\u5bfc\u51fa\u76f4\u63a5\u70b8\u4e86... `/`\u88ab\u5f3a\u5236\u521b\u5efa\u6587\u4ef6\u5939\u3001`\u7a7a\u683c.:`\u76f4\u63a5\u88ab\u66ff\u6362\u4e3a `\'\'` (\u7a7a), \u5bfc\u81f4\u5f88\u591a\u4e1c\u897f\u90fd\u89e3\u6790\u4e0d\u4e86...\\n\\n\u4ee5\u540e\u547d\u540d\u9700\u8981\u6ce8\u610f\u4e00\u4e0b. (\u4e0d\u8fc7\u5f71\u54cd\u7684\u5185\u5bb9\u4e0d\u591a, \u53ea\u6709\u5c11\u6570\u51e0\u7bc7\u6709\u95ee\u9898.. (\u4f46\u662f`.\u7a7a\u683c`\u8fd9\u79cd, \u56e0\u4e3a\u529b\u6263\u9898\u76ee\u7684\u6807\u9898\u5305\u542b\u8fd9\u4e9b, \u6211\u5c31\u53ea\u597dpy\u5148\u9884\u5904\u7406\u66ff\u6362\u4e86qwq))"},{"id":"/2025/4/22/02-vscode\u535a\u5ba2\u6a21\u7248","metadata":{"permalink":"/HXLoLiHub/blog/2025/4/22/02-vscode\u535a\u5ba2\u6a21\u7248","editUrl":"https://github.com/HengXin666/HXLoLiHub/edit/main/blog/2025-4-22/02-vscode\u535a\u5ba2\u6a21\u7248.md","source":"@site/blog/2025-4-22/02-vscode\u535a\u5ba2\u6a21\u7248.md","title":"VsCode\u535a\u5ba2\u6a21\u7248","description":"\u8fd9\u662f\u4e00\u7bc7\u6a21\u7248\u6587\u7ae0, \u6559\u60a8\u5982\u4f55\u7f16\u5199\u535a\u5ba2, \u4ee5\u53ca\u63d0\u4f9b\u4e86VsCode\u7684\u4ee3\u7801\u7247\u6bb5, \u4ee5\u5feb\u901f\u7f16\u5199\u535a\u5ba2!","date":"2025-04-22T01:35:08.000Z","tags":[{"inline":true,"label":"\u6a21\u7248","permalink":"/HXLoLiHub/blog/tags/\u6a21\u7248"},{"inline":false,"label":"Docusaurus","permalink":"/HXLoLiHub/blog/tags/docusaurus","description":"\u4e0e Docusaurus \u6846\u67b6\u76f8\u5173\u7684\u535a\u5ba2\u6587\u7ae0"},{"inline":false,"label":"VsCode","permalink":"/HXLoLiHub/blog/tags/vscode","description":"\u4e0e VsCode \u914d\u7f6e\u76f8\u5173\u7684\u535a\u5ba2\u6587\u7ae0"}],"readingTime":1.24,"hasTruncateMarker":true,"authors":[{"name":"Heng_Xin","title":"\u3053\u3053\u304b\u3089\u5148\u306f\u4e00\u65b9\u901a\u884c\u3060!","url":"https://github.com/HengXin666","email":"282000500@qq.com","socials":{"github":"https://github.com/HengXin666","bilibili":"https://space.bilibili.com/478917126"},"imageURL":"https://avatars.githubusercontent.com/u/103022267","key":"Heng_Xin","page":null}],"frontMatter":{"authors":"Heng_Xin","title":"VsCode\u535a\u5ba2\u6a21\u7248","date":"2025-04-22T01:35:08.000Z","tags":["\u6a21\u7248","docusaurus","vscode"]},"unlisted":false,"lastUpdatedAt":1745304527000,"lastUpdatedBy":"Heng_Xin_666","prevItem":{"title":"Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55","permalink":"/HXLoLiHub/blog/2025/4/25/01-Blossom\u8fc1\u79fb\u7b14\u8bb0\u8bb0\u5f55"},"nextItem":{"title":"\u7b2c\u4e00\u7bc7\u6d4b\u8bd5\u6587\u7ae0","permalink":"/HXLoLiHub/blog/2025/4/22/01-\u6d4b\u8bd5\u535a\u5ba2"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u6a21\u7248\u6587\u7ae0, \u6559\u60a8\u5982\u4f55\u7f16\u5199\u535a\u5ba2, \u4ee5\u53ca\u63d0\u4f9b\u4e86`VsCode`\u7684\u4ee3\u7801\u7247\u6bb5, \u4ee5\u5feb\u901f\u7f16\u5199\u535a\u5ba2!\\n\\n\x3c!-- truncate --\x3e\\n\\n## VsCode \u4ee3\u7801\u7247\u6bb5 \u6a21\u7248\\n\\n\u8bbe\u7f6e -> \u4ee3\u7801\u7247\u6bb5 -> markdown -> \u586b\u5199\u4ee5\u4e0b\u5185\u5bb9: (\u60a8\u9700\u8981\u4fee\u6539\u4e00\u4e0b`authors`\u4e3a\u4f60\u81ea\u5df1\u7684\u540d\u79f0)\\n\\n```json vscode\\n\\"HXLoliHubBlog\u6a21\u7248\\": {\\n    \\"prefix\\": \\"mdBlogBegin\\",\\n    \\"body\\": [\\n        \\"---\\",\\n        \\"authors: Heng_Xin\\",\\n        \\"title: ${1:\u6807\u9898}\\",\\n        \\"date: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\\",\\n        \\"tags:\\",\\n        \\"    - ${2:\u6807\u7b7e}\\",\\n        \\"---\\",\\n        \\"\\",\\n        \\"${3:\u7b80\u4ecb}\\",\\n        \\"\\",\\n        \\"\x3c!-- truncate --\x3e\\",\\n    ],\\n    \\"description\\": \\"HXLoliHub Blog\u6a21\u7248\\"\\n}\\n```\\n\\n\u7136\u540e\u5c1d\u8bd5\u5728`.md`\u4e2d\u6253`mdBlogBegin`, \u7406\u8bba\u4e0a\u5c31\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u6a21\u7248.\\n\\n\u5982\u679c\u8fde\u4ee3\u7801\u63d0\u793a\u90fd\u6ca1\u6709, \u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5:\\n\\n\u70b9\u51fb:\\n\\n![\u6b65\u9aa41](PixPin_2025-04-22_02-14-41.png)\\n\\n\u7136\u540e\u4f1a\u51fa\u73b0:\\n\\n![\u6b65\u9aa42](PixPin_2025-04-22_02-15-08.png)\\n\\n\u7136\u540e\u5c31\u4f1a\u8df3\u8f6c\u5230\u914d\u7f6e\u6587\u4ef6:\\n\\n```json vscode\\n\\"[markdown]\\": {\\n    // \u7c98\u8d34\u4e0b\u9762\u5185\u5bb9\\n    \\"editor.wordWrap\\": \\"on\\",\\n    \\"editor.quickSuggestions\\": {\\n        \\"other\\": \\"on\\",\\n        \\"comments\\": \\"off\\",\\n        \\"strings\\": \\"on\\"\\n    },\\n    // \u4e0b\u9762\u8fd9\u4e2a\u662f\u4e00\u4e2a\u63d2\u4ef6, \u4f60\u53ef\u4ee5\u53bb\u4e0b\u8f7d\u4e00\u4e0b, \u5f88\u65b9\u4fbf\u7684, \u76f4\u63a5\u5728 vscode \u62d3\u5c55\u4e2d\u641c\u7d22: Markdown All in One \u5373\u53ef\\n    \\"editor.defaultFormatter\\": \\"yzhang.markdown-all-in-one\\"\\n},\\n```\\n\\n\u7136\u540e\u56de\u7b54`.md`\u6587\u4ef6, \u5e94\u8be5\u5c31\u6709\u4ee3\u7801\u63d0\u793a\u4e86~"},{"id":"/2025/4/22/01-\u6d4b\u8bd5\u535a\u5ba2","metadata":{"permalink":"/HXLoLiHub/blog/2025/4/22/01-\u6d4b\u8bd5\u535a\u5ba2","editUrl":"https://github.com/HengXin666/HXLoLiHub/edit/main/blog/2025-4-22/01-\u6d4b\u8bd5\u535a\u5ba2.md","source":"@site/blog/2025-4-22/01-\u6d4b\u8bd5\u535a\u5ba2.md","title":"\u7b2c\u4e00\u7bc7\u6d4b\u8bd5\u6587\u7ae0","description":"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u535a\u5ba2\u6587\u7ae0.","date":"2025-04-22T01:35:01.000Z","tags":[{"inline":true,"label":"\u6d4b\u8bd5","permalink":"/HXLoLiHub/blog/tags/\u6d4b\u8bd5"},{"inline":true,"label":"demo","permalink":"/HXLoLiHub/blog/tags/demo"},{"inline":false,"label":"Docusaurus","permalink":"/HXLoLiHub/blog/tags/docusaurus","description":"\u4e0e Docusaurus \u6846\u67b6\u76f8\u5173\u7684\u535a\u5ba2\u6587\u7ae0"}],"readingTime":0.45,"hasTruncateMarker":true,"authors":[{"name":"Heng_Xin","title":"\u3053\u3053\u304b\u3089\u5148\u306f\u4e00\u65b9\u901a\u884c\u3060!","url":"https://github.com/HengXin666","email":"282000500@qq.com","socials":{"github":"https://github.com/HengXin666","bilibili":"https://space.bilibili.com/478917126"},"imageURL":"https://avatars.githubusercontent.com/u/103022267","key":"Heng_Xin","page":null}],"frontMatter":{"authors":"Heng_Xin","title":"\u7b2c\u4e00\u7bc7\u6d4b\u8bd5\u6587\u7ae0","date":"2025-04-22T01:35:01.000Z","tags":["\u6d4b\u8bd5","demo","docusaurus"]},"unlisted":false,"lastUpdatedAt":1745339562000,"lastUpdatedBy":"Heng_Xin_666","prevItem":{"title":"VsCode\u535a\u5ba2\u6a21\u7248","permalink":"/HXLoLiHub/blog/2025/4/22/02-vscode\u535a\u5ba2\u6a21\u7248"}},"content":"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u535a\u5ba2\u6587\u7ae0.\\n\\n```cpp\\n#include <cstdio>\\n\\n[]{printf(\\"Hello HXLoLiHub!\\\\n\\");}();\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n> [!TIP]\\n> \u4e0a\u9762\u662f\u6458\u8981. `\u5916\u9762`\u770b\u4e0d\u89c1\u4e0b\u9762\u7684\u5185\u5bb9.\\n\\n## \u4f9d\u65e7\u652f\u6301 vscode \u7f16\u8f91\u5668\\n\\n```cpp vscode\\n/*\\n    \u5982\u4f60\u6240\u89c1, \u8fd9\u4e2a\u662f\u6d4b\u8bd5\u535a\u5ba2\\n*/\\n```\\n\\n## \u4f9d\u65e7\u652f\u6301 LeetCode \u7ec4\u5408\u4ee3\u7801\u5757\\n\\n```cpp [g1-c++]\\nint main() {\\n    return 0;\\n}\\n```\\n\\n```cpp [g1-CPP]\\nauto __main __ = [] {\\n    return 0;\\n}();\\n```"}]}}')}}]);